@model  SxVMCookie
@{
    var isNew = string.IsNullOrEmpty(Model.Name);
    ViewBag.Title = $"{(isNew ? "Добавить" : "Редактировать")} cookie";
}

<h2>@ViewBag.Title</h2>
<br />

@if (!isNew)
{
    <div class="form-group">
        <div class="text-right">
            <form method="post" action="@Url.Action("Delete")" onsubmit="if (!confirm('Удалить запись?')) { return false; }">
                <input type="hidden" name="@Html.NameFor(x=>x.Name)" value="@Html.ValueFor(x=>x.Name)" />
                <button type="submit" class="btn btn-danger">Удалить</button>
            </form>
        </div>
    </div>
}

<form method="post" action="@Url.Action("Edit")">
    @Html.AntiForgeryToken()
    @if (!isNew)
    {
        <input name="oldName" type="hidden" value="@Html.ValueFor(x => x.Name)" />
    }

    <div class="form-group">
        @Html.LabelFor(x => x.Name, new { @class = "control-label" })
        @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Value, new { @class = "control-label" })
        @Html.EditorFor(x => x.Value, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.Value)
    </div>

    <div class="form-group">
        <a href="@Url.Action("Index")" class="btn btn-default">Назад</a>
        <button type="submit" class="btn btn-primary">@(isNew ? "Добавить" : "Сохранить")</button>
    </div>
</form>


@section scripts{
    <script src="@Url.Action("Js", "StaticContent", new { area="", name="jquery.validate"})"></script>
    <script src="@Url.Action("Js", "StaticContent", new { area="", name="jquery.validate.unobtrusive"})"></script>
}