@model VMSiteTest
@{
    ViewBag.Title = Model.Title;
    ViewBag.H1 = ViewBag.H1 ?? Model.Title;
    ViewBag.Description = ViewBag.Description ?? Model.Description;
    ViewBag.Keywords = ViewBag.Keywords ?? "Игровые тесты, тесты для игр";
}

@if (Model.Blocks.Any())
{
    <div id="st-page">
        <br />
        <p>
            @Model.Description
        </p>

        <div>
            @for (int i = 0; i < 2; i++)
            {
                var block = Model.Blocks[i];
                if (block.Questions.Any())
                {
                    <section id="stb-@block.Id" class="@(i!=0?"hidden":null)">
                        <blockquote class="desc">
                            <h3 class="title">@block.Title</h3>
                            <br />
                            @block.Description
                        </blockquote>

                        @Html.SxIndicatorGroup(block.Questions, new SxExtantions.SxIndicatorGroupSettings<VMSiteTestQuestion>
                   {
                       FuncGetId = x => "stq-" + x.Id,
                       FuncGetLabel = x => x.Text
                   })

                    </section>
                }
            }
            <div class="text-center">
                <button class="btn btn-default btn-transparent white next-btn disabled">
                    <span></span>
                    Далее
                </button>
            </div>
        </div>
    </div>

    @section scripts{
        <script>
            $(function () {
                $('.sx-indicator > span').click(function () {
                    $span = $(this);
                    $section = $span.closest('section');
                    var isTrue = $span.data('dir') == true;

                    if (isTrue)
                        $span.next('span').removeAttr('class');
                    else
                        $span.prev('span').removeAttr('class');

                    $span.addClass('active');
                    showNextQuestionsBtn($section);
                });

                $('.next-btn').click(function () {
                    $section = $('section:visible');
                    $sectionNext = $section.next('section');
                    if ($sectionNext.length == 1) {
                        $section.addClass('hidden');
                        $sectionNext.removeClass('hidden');
                    }
                    else
                        sendSiteTestResult();
                });
            });

            function showNextQuestionsBtn(section)
            {
                var count = $(section).find('.sx-indicator').length;
                var selected = $section.find('.sx-indicator > span.active').length;
                if (count == selected)
                    $('.next-btn').removeClass('disabled');
            }

            function sendSiteTestResult()
            {
                var test = { testId: @Model.Id, blocks: [] };

                $('section').each(function () {
                    $block=$(this);
                    var id=parseInt($block.attr('id').replace('stb-', ''));
                    var b={ blockId: id, questions: []};
                    $block.find('li[id^="stq-"]').each(function(){
                        $question=$(this);
                        var qid=parseInt($question.attr('id').replace('stq-', ''));
                        var res=$question.find('span.active').data('dir');
                        var q={questionId: qid, result: res};
                        b.questions.push(q);
                    });
                    test.blocks.push(b);
                });

                $.ajax({
                    method:'post',
                    url:'/sitetests/result',
                    contentType:'application/json',
                    data: JSON.stringify(test),
                    success:function(data){
                        alert(data);
                        window.location='/sitetests/result?resultId='+data;
                    }
                });
            }
        </script>
    }
}