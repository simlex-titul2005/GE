@model VMEditRole
@{
    var isNew = string.IsNullOrEmpty(Model.Id);
    ViewBag.Title = isNew ? "Добавить роль" : "Редактировать роль \"" + Model.Name + "\"";
}

<h2>@ViewBag.Title</h2>
@if (!isNew)
{
    <form method="post" action="@Url.Action(MVC.Roles.Delete())">
        @Html.HiddenFor(x => x.Id)
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-danger pull-right">Удалить роль</button>
    </form>
}
<br />
<form method="post" action="@Url.Action(MVC.Roles.Edit())">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)

    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(x => x.Name, new { @class = "control-label" })
            @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите наименование роли" } })
            @Html.ValidationMessageFor(x => x.Name)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(x => x.Description, new { @class = "control-label" })
            @Html.EditorFor(x => x.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите описание роли" } })
            @Html.ValidationMessageFor(x => x.Description)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <button type="submit" class="btn btn-primary">@(isNew ? "Добавить" : "Сохранить")</button>
            @Html.ActionLink("Назад", MVC.Roles.Index(), new { @class = "btn btn-default" })
        </div>
    </div>
</form>