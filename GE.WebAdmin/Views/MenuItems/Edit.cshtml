@model VMEditMenuItem

<form method="post" action="edit" class="form">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.MenuId)

    <div class="row">
        <div class="col-md-12">
            <!--caption-->
            <div class="form-group">
                @Html.LabelFor(x => x.Caption, new { @class = "control-label" })
                @Html.EditorFor(x => x.Caption, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите название пункта меню" } })
                @Html.ValidationMessageFor(x => x.Caption)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Show, new { @class = "control-label" })
                @Html.EditorFor(x => x.Show, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите название пункта меню" } })
                @Html.ValidationMessageFor(x => x.Show)
            </div>

            <!--title-->
            <div class="form-group">
                @Html.LabelFor(x => x.Title, new { @class = "control-label" })
                @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите название пункта меню" } })
                @Html.ValidationMessageFor(x => x.Title)
            </div>

            <!--route-->
            <div class="form-group">
                @Html.LabelFor(x => x.RouteId, new { @class = "control-label" })
                @Html.DropDownListFor(x => x.RouteId, (SelectList)ViewData["Routes"], new { @class = "form-control", @placeholder = "Введите маршрут" })
                @Html.ValidationMessageFor(x => x.RouteId)
            </div>
        </div>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">@(Model.Id == 0 ? "Добавить" : "Сохранить")</button>
        @Html.ActionLink("Назад", MVC.Menues.Edit(Model.MenuId), new { @class = "btn btn-default" })
        <button type="button" class="btn btn-danger pull-right">Удалить</button>
    </div>
</form>

