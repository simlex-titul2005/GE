@model VMEditSiteTest
@{
    var isNew = Model.Id == 0;
    ViewBag.Title = Model.Id == 0 ? "Добавить тест сайта" : "Редактировать тест \"" + Model.Title + "\"";
}

<h2>@ViewBag.Title</h2>

@if (!isNew)
{
    <div class="text-right">
        <div class="form-group">
            <form method="post" action="delete">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.Id)
                <button type="submit" class="btn btn-danger" onclick="if(!confirm('Удалить запись?')){return false;}">Удалить тест</button>
            </form>
        </div>
    </div>
}

<form method="post" action="edit">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)

    <div class="row">
        <div class="col-md-9">
            <div class="form-group">
                @Html.LabelFor(x => x.Title, new { @class = "control-label" })
                @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Title)
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                @Html.LabelFor(x => x.TestType, new { @class = "control-label" })
                @if (isNew)
                {
                    @Html.EnumDropDownListFor(x => x.TestType, new { @class = "form-control" })
                }
                else
                {
                    @Html.EnumDropDownListFor(x => x.TestType, new { @class = "form-control", @disabled = "disabled" })
                }
                @Html.ValidationMessageFor(x => x.TestType)
            </div>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(x => x.Description, new { @class = "control-label" })
        @Html.EditorFor(x => x.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.Description)
    </div>

    <div class="modal fade" id="matrixModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel"><b>@Model.Title</b>. Матрица ответов теста</h4>
                </div>
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">@(Model.Id == 0 ? "Добавить" : "Сохранить")</button>
        @if (!isNew && Model.TestType == SX.WebCore.SxSiteTest.SiteTestType.GuessYesNo)
        {
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#matrixModal">Матрица ответов</button>
        }
        @Html.RouteLink("Назад", new { action = "Index" }, new { @class = "btn btn-default" })
    </div>
</form>

@section scripts{
    <script>
        $(function () {
            $('#matrixModal').on('show.bs.modal', function (e) {
                $.ajax({
                    method: 'get',
                    url:'/sitetests/testmatrix?testId='+@Model.Id,
                    success:function(data){
                        $('#matrixModal .modal-body').html(data);
                    }
                });
            })
        });
    </script>
}