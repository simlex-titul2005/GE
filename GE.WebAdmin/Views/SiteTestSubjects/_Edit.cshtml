@model SxVMEditSiteTestSubject
@{ 
    var isNew = Model.Id == 0;
}

@using (Ajax.BeginForm("Edit", new { controller= "SiteTestSubjects" }, new AjaxOptions { HttpMethod="post", UpdateTargetId= "grid-test-subjects", OnComplete= "$('#test-modal').modal('hide');" }, new { @autocomplete="off"}))
{
    @Html.AntiForgeryToken()
    <input type="hidden" name="subject.Id" value="@Model.Id" />
    <input type="hidden" name="subject.TestId" value="@Model.TestId" />

    <div class="form-group">
        @Html.LabelFor(x => x.Title, new { @class = "control-label" })
        <textarea class="form-control" name="subject.Title" placeholder="Введите заголовок (не более 400 знаков)">@Model.Title</textarea>
        @Html.ValidationMessageFor(x => x.Title)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.PictureId, new { @class = "control-label" })
        @Html.EditorFor(x => x.PictureId)
        @Html.ValidationMessageFor(x => x.PictureId)
        @if(Model.Picture!=null)
        {
            <br />
            <img alt="@Model.Picture.Caption" src="@Url.Action("Picture","Pictures", new { id=Model.Picture.Id})" style="max-height:140px;" />
        }
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Description, new { @class = "control-label" })
        <textarea class="form-control" name="subject.Description" id="subject.Description" value="@Model.Description" placeholder="Введите описание">@Model.Description</textarea>
        @Html.ValidationMessageFor(x => x.Description)
    </div>

    <div class="form-group">
        <div class="text-right">
            <button class="btn btn-default" data-dismiss="modal" aria-label="Close" type="button">Отмена</button>
            <button class="btn btn-primary" type="submit">@(isNew? "Добавить" : "Сохранить")</button>
        </div>
    </div>
}