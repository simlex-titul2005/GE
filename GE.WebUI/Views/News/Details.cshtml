@using SX.WebCore.Providers;
@using SX.WebCore;

@model VMMaterial
@{
    var title = ViewBag.Title;
    var h1 = ViewBag.H1;
    ViewBag.Title = title ?? Model.Title;
    ViewBag.H1 = ViewBag.H1 ?? ViewBag.Title;
    ViewBag.Description = ViewBag.Description ?? Model.Foreword;
    ViewBag.PageImage = Model.FrontPictureId.HasValue && Model.ShowFrontPictureOnDetailPage
        ? Url.ContentAbsUrl(Url.Action("Picture", "Pictures", new { id = Model.FrontPictureId }))
        : Model.Videos.Length>0
        ? SxVideoProvider.GetVideoImageUrl(Model.Videos[0].VideoId, SxVideoProvider.VideoQuality.Medium)
        : null;
    var banners = (SxVMBanner[])ViewBag.PageBanners;
    SxVMBanner banner = null;
}

@Html.AntiForgeryToken()
<div class="detail-news">
    @Html.Partial("_Breadcrumbs", (SxVMBreadcrumb[])ViewBag.Breadcrumbs)

    @Html.Partial("_Foreword", Model)

    <div class="m-html">
        @Html.Action("Popular", "News", new { mct = Model.ModelCoreType, mid = Model.Id, amount = 4 })
        @if (Model.FrontPictureId.HasValue && Model.ShowFrontPictureOnDetailPage)
        {
            <img class="f-picture" alt="@Model.Title" src="@Url.Action("Picture", "Pictures", new { id=Model.FrontPictureId})" />
        }
        @Html.Raw(Model.Html)

        @Html.SxShareButtons(global_asax.ShareButtons, lbSettings:new SxExtantions.SxLikeButtonsSettings {
       LikeDownCount=()=>Model.LikeDownCount,
       LikeUpCount=()=>Model.LikeUpCount,
       UrlUp = () => Url.Action("AddLike", "News", new { mid = Model.Id, ld = "true" }),
       UrlDown = () => Url.Action("AddLike", "News", new { mid = Model.Id, ld = "false" })
   })
    </div>

    @Html.Partial("_MaterialInfo", Model)

    @*aphorisms*@
    <div id="aphorisms">
       @{Html.RenderAction("Random", "Aphorism"); }
    </div>

    @Html.Action("LikeMaterials", "News", new { materialId = Model.Id, modelCoreType = Model.ModelCoreType, amount = 9 })

    @{
        banner = banners != null ? banners.SingleOrDefault(x => x.Place == SxBanner.BannerPlace.Intermediate) : null;
        if (banner != null)
        {
            <div style="margin-top:30px;">
                @Html.SxThroughBanner(banner, (b) => Url.Action("Picture", "Pictures", new { id = b.PictureId }), b => { return Url.Action("Click", "Banners", new { bannerId = b.Id }); })
            </div>
        }
    }

    @Html.Action("List", "MaterialTags", new { mid = Model.Id, mct = Model.ModelCoreType, maxFs = 30 })

    <div id="by-date-mat">
        @Html.Action("ByDateMaterial", "News", new { mid = Model.Id, mct = Model.ModelCoreType })
    </div>

    <br />
    @Html.Action("Edit", "Comments", new { mid = Model.Id, mct = Model.ModelCoreType })

</div>


@section scripts{
    <script src="~/content/dist/js/jquery.unobtrusive-ajax.min.js"></script>
    <script type="text/javascript" src="~/Content/dist/js/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/Content/dist/js/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript" src="~/Content/dist/js/ge-aphorisms.min.js"></script>
    <script type="text/javascript" src="~/Content/dist/js/currency-provider.min.js"></script>
    <script src="~/content/dist/js/goodshare.min.js"></script>
    <script type="text/javascript">
        loadScriptOnce('https://www.youtube.com/iframe_api');
        $(function () {
            $('#aphorisms').geAphorisms();
            $('section[id^="comments-"]').load('/comments/list?mid=' +@Model.Id +'&mct=' + '@Model.ModelCoreType');
        });
    </script>
}