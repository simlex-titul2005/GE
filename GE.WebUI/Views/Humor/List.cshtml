@using SX.WebCore;
@model SxExtantions.SxPagedCollection<VMHumor>
@{
    var siteName = SiteSettingsProvider["sitename"]?.Value;
    ViewBag.Title = ViewBag.Title ?? "Коллекция юмора от " + siteName;
    ViewBag.H1 = ViewBag.H1 ?? ViewBag.Title;
    ViewBag.Description = ViewBag.Description ?? "Качественная коллекция юмора от " + siteName;
    ViewBag.Keywords = ViewBag.Description ?? "Анекдоты, смешные истории, розыгрыши, шутки, " + siteName;
    VMMaterial item;
    var length = 1000;
    var date = DateTime.Now;
}

@section styles{
    <link href="~/content/dist/css/humor.min.css" rel="stylesheet" />
    <link href="~/content/dist/css/yt-videos.min.css" rel="stylesheet" />
}

@Html.SxBreadcrumbs((SxVMBreadcrumb[])ViewBag.Breadcrumbs)

<div id="humor-page">
    <div class="row">
        <div class="col-md-9">
            <div class="text-center">
                <a href="@Url.Action("Add", "Humor")" class="btn btn-transparent white">Добавить юмор</a>
            </div>
            <br/>
            @if (Model.Collection.Any())
            {
                <ul class="list-unstyled humor-list">
                    @for (var i = 0; i < Model.Collection.Length; i++)
                    {
                        item = Model.Collection[i];
                        <li class="humor-list-item">
                            <div>
                                <h2 class="humor-list__header">@item.Title</h2>
                                <div class="humor-list__info">
                                    <ul class="list-unstyled list-inline">
                                        <li>
                                            <i class="fa fa-clock-o" aria-hidden="true"></i>: &nbsp; @((date - item.DateOfPublication).Days) дней назад
                                        </li>
                                        <li>
                                            <i class="fa fa-eye" aria-hidden="true"></i>: &nbsp; @item.ViewsCount
                                        </li>
                                        <li>
                                            <i class="fa fa-comments-o" aria-hidden="true"></i>: &nbsp; @item.CommentsCount
                                        </li>
                                    </ul>
                                </div>
                                @if (item.User != null)
                                {
                                    <div class="humor-list__author text-muted">
                                        @if (item.User.Id != null)
                                        {
                                            <span>Опубликовал: @(item.User.NikName ?? item.User.Email)</span>
                                        }
                                        else
                                        {
                                            <span>Прислал: @(item.User.NikName)</span>
                                        }
                                    </div>
                                }
                                <div>
                                    @if (item.Videos.Length > 0)
                                    {
                                        <div style="position: relative; height: 340px; width: 100%; max-width: 100%;">
                                            @Html.SxVideo(item.Videos.First(), SX.WebCore.SxProviders.SxVideoProvider.VideoQuality.Medium)
                                        </div>
                                    }
                                    else
                                    {
                                        @Html.Raw(item.Html.Length <= length ? item.Html : item.Html.Substring(0, length) + "...")
                                    }
                                </div>
                                @if (!string.IsNullOrEmpty(item.SourceUrl))
                                {
                                    <div class="humor-list__source">
                                        Источник: <a href="@item.SourceUrl" rel="nofollow" target="_blank">@item.SourceUrl</a>
                                    </div>
                                }


                                <br/>
                                <div class="text-center">
                                    @Html.SxShareButtons(options: new SxExtantions.SxShareButtonOption
                                    {
                                        Url = Url.ContentAbsUrl(item.GetUrl(Url)),
                                        Title = item.Title,
                                        Description = item.Foreword ?? item.GetForewordFromHtml(300),
                                        Image = item.FrontPictureId.HasValue ? Url.ContentAbsUrl(Url.Action("Picture", "Pictures", new {id = item.FrontPictureId})) : null
                                    })
                                </div>

                                @if (item.Html.Length > length)
                                {
                                    <div class="text-center">
                                        <br/>
                                        <a href="@item.GetUrl(Url)" class="btn btn-warning">Читать до конца</a>
                                    </div>
                                }
                            </div>
                        </li>
                    }
                </ul>
                <div class="text-center">
                    @Html.SxPager(Model.PagerInfo, pageUrl: (x) => Url.Action("List", new {page = x}), isAjax: false, htmlAttributes: new {@class = "pagination"})
                </div>
                <br/>
                <div class="text-center">
                    <a href="@Url.Action("Add", "Humor")" class="btn btn-transparent white">Добавить юмор</a>
                </div>
            }
        </div>
        <div class="col-md-3">
            @Html.Partial("_WeNeedHelp")
        </div>
    </div>
</div>


@section scripts{
    <script src="~/Scripts/sxshare.js"></script>
    <script src="~/Scripts/videos.js"></script>
    <script type="text/javascript">
        $(function() {
            var videos = new Videos('@Url.Action("GetJson", "YoutubeVideos")', '.humor-list', '.humor-list-item', '<li></li>', 23, 12, 3);
            videos.initialize();
        });
    </script>
}