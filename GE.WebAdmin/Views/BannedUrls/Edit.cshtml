@model VMEditBannedUrl
@{
    var isNew = Model.Id == 0;
    ViewBag.Title = isNew ? "Добавить адрес в бан" : "Редактировать забаненный адрес \"" + Model.Url + "\"";
}

<h2>@ViewBag.Title</h2>
@if (!isNew)
{
    <div class="text-right">
        <form method="post" action="@Url.Action(MVC.BannedUrls.Delete())">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.Id)
            <button type="submit" class="btn btn-danger" onclick="if (!confirm('Удалить запись?')) { return false;}">Удалить</button>
        </form>
    </div>
}
<br />
<form method="post" action="@Url.Action(MVC.BannedUrls.Edit())">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)

    @Html.LabelFor(x => x.Url)
    @Html.EditorFor(x => x.Url, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите адрес" } })
    @Html.ValidationMessageFor(x => x.Url)
    <br />
    @Html.LabelFor(x => x.Couse)
    @Html.EditorFor(x => x.Couse, new { htmlAttributes = new { @class = "form-control", @placeholder = "Укажите причину бана" } })
    @Html.ValidationMessageFor(x => x.Couse)
    <br />
    <button type="submit" class="btn btn-primary">@(isNew ? "Добавить" : "Сохранить")</button>
</form>
