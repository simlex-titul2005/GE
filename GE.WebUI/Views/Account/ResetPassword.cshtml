@model SxVMResetPassword
@{
    ViewBag.Title = "Востановление пароля";
}

@section head{
    <meta name="robots" content="noindex" />
}

<div class="identity-page login">
    <div class="wrapper">
        <h2>@ViewBag.Title</h2>
        <br />
        @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "transparent", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Code)
           
             <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                @Html.EditorFor(x=>x.Email, new { htmlAttributes=new { @class="form-control"} })
                @Html.ValidationMessageFor(x=>x.Email)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                @Html.EditorFor(x => x.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Password)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label" })
                @Html.EditorFor(x => x.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.ConfirmPassword)
            </div>

            <div class="form-group">
                @Html.ValidationSummary()
            </div>

            <div class="form-group">
                <input type="submit" class="btn btn-transparent white" value="Восстановить" />
            </div>
        }
    </div>
</div>

@section scripts {
    <script src="@Url.Action("Js", "StaticContent", new { name="jquery.validate", area=""})"></script>
    <script src="@Url.Action("Js", "StaticContent", new { name = "jquery.validate.unobtrusive" })"></script>
}
