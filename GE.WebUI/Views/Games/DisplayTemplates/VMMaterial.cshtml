@model VMMaterial
@{
    Layout = null;
    var hasVideo = Model.Videos.Any();
    var isAphorism = Model.ModelCoreType == 6/*aphorism*/;
}
<div class="dg-lm">
    <div class="row">

        @*image*@
        <div class="col-md-2">
            @if (Model.FrontPictureId.HasValue)
            {
                <figure class="@(isAphorism?"img-circle":null)" style="background-image:url(@(Url.Action("Picture", new { controller="Pictures", id=Model.FrontPictureId, width= 300})))" onclick="changeLocation($(this).closest('.dg-lm'))">

                </figure>
            }
        </div>

        @*content*@
        <div class="col-md-@(hasVideo?8:10)">
            <div class="content">
                <div class="date">@Model.DateOfPublication</div>
                <div class="title">
                    <h4>
                        <a href="@Model.GetUrl(Url)">@Model.Title</a>
                    </h4>
                </div>
                <div class="fwd">
                    @Html.Raw(Model.Foreword)
                </div>
                <div class="details">
                    <a href="@Model.GetUrl(Url)" class="btn btn-default">Подробнее</a>
                </div>
                <div class="info">
                    @Html.Partial("_MaterialInfo", Model)
                </div>
            </div>
        </div>

        @*video*@
        @if (hasVideo)
        {
            var video = Model.Videos[0];
            <div class="col-md-2">
                <div class="video-container">
                    @Html.SxVideo(video, SX.WebCore.SxProviders.SxVideoProvider.VideoQuality.Medium, url: Url.Action("Details", "YoutubeVideos", new { videoId = video.VideoId }))
                </div>
            </div>
        }
    </div>
</div>