@model VMEditEmptyGameSettings
@{
    ViewBag.Title = "Начальная иконка";
    var message = TempData["EditEmptyGameMessage"];
}

<h2>@ViewBag.Title</h2>
<p class="text-info lead">В данном разделе задаются настройки иконки по-умолчанию для первой ссылки в меню игр. По нажатию на эту ссылку, результаты запроса обрабатываются для всех результатов, не зависимо от выбранной игры.</p>
@if (message != null)
{
    <p class="text-success">@message</p>
}
<form method="post" action="@Url.Action("EditEmptyGame", new { controller="sitesettings"})" autocomplete="off">
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.OldIconPath)
    @Html.HiddenFor(x => x.OldGoodImagePath)
    @Html.HiddenFor(x => x.OldBadImagePath)

    <div class="form-group">
        @Html.LabelFor(x => x.IconPath, new { @class = "control-label" })
        @Html.EditorFor(x => x.IconPath, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите путь к иконке" } })
        @Html.ValidationMessageFor(x => x.IconPath)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.GoodImagePath, new { @class = "control-label" })
        @Html.EditorFor(x => x.GoodImagePath, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите путь к положительному изображению" } })
        @Html.ValidationMessageFor(x => x.GoodImagePath)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.BadImagePath, new { @class = "control-label" })
        @Html.EditorFor(x => x.BadImagePath, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите путь к отрицательному изображению" } })
        @Html.ValidationMessageFor(x => x.BadImagePath)
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Сохранить</button>
    </div>
</form>