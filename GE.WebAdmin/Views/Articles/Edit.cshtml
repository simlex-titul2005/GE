@model VMEditArticle
@{
    var isNew = Model.Id == 0;
    ViewBag.Title = isNew ? "Добавить статью" : "Редактировать статью \"" + Model.Title + "\"";
    ViewBag.GameTitle = isNew || !Model.GameId.HasValue ? null : Model.Game.Title;
    ViewBag.MaterialCategoryTitle = isNew || Model.CategoryId == null ? null : Model.Category.Title;
    var uriFragmet = Request.QueryString.GetValues("fragment") != null ? Request.QueryString.GetValues("fragment")[0] : null;
    var hasError = Convert.ToBoolean(ViewBag.HasError);
}

@section styles{
    <link rel="stylesheet" href="~/Content/dist/css/bootstrap-datepicker.min.css" />
    <link rel="stylesheet" href="~/Content/dist/css/lightbox.min.css" />
}

<h2>@ViewBag.Title</h2>
@if (Model.Id != 0 && User.IsInRole("admin"))
{
    <div class="text-right">
        <form method="post" action="delete">
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.ModelCoreType)
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger" onclick="if (!confirm('Удалить запись?')) { return false;}">Удалить статью</button>
        </form>
    </div>
}
<br />

<ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="@(uriFragmet==null || uriFragmet=="params"? "active":null)"><a href="#params" aria-controls="params" role="tab" data-toggle="tab">Параметры</a></li>
    @if (User.IsInRole("seo") && !isNew)
    {
        <li role="presentation" class="@(uriFragmet=="tags-cloud"? "active":null)"><a href="#tags-cloud" aria-controls="tags-cloud" role="tab" data-toggle="tab">Облако тегов</a></li>
        <li role="presentation" class="@(uriFragmet=="seo"? "active":null)"><a href="#seo" aria-controls="seo" role="tab" data-toggle="tab">Seo</a></li>
    }
    @if (User.IsInRole("video-redactor") && !isNew)
    {
        <li role="presentation" class="@(uriFragmet=="videos"? "active":null)"><a href="#videos" aria-controls="videos" role="tab" data-toggle="tab">Видео</a></li>
    }
</ul>
<div class="tab-content">
    <div role="tabpanel" class="tab-pane @(uriFragmet==null || uriFragmet=="params"? "active":null)" id="params">
        <h2>Основные параметры материала</h2>
        <form method="post" action="@Url.Action(MVC.Articles.Edit())">
            @Html.AntiForgeryToken()

            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.ModelCoreType)
            @Html.HiddenFor(x => x.OldTitleUrl)
            @if (!isNew)
            {
                @Html.HiddenFor(x => x.UserId)
            }

            <div class="row">
                <div class="col-md-@(isNew?8:6)">
                    @Html.LabelFor(x => x.Title, new { @class = "control-label" })
                    @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите название статьи" } })
                    @Html.ValidationMessageFor(x => x.Title)
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(x => x.Show, new { @class = "control-label" })
                    @Html.EditorFor(x => x.Show, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Show)
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(x => x.IsTop, new { @class = "control-label" })
                    @Html.EditorFor(x => x.IsTop, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.IsTop)
                </div>

                @if (!isNew)
                {
                    <div class="col-md-2">
                        @Html.LabelFor(x => x.DateOfPublication, new { @class = "control-label" })
                        @Html.EditorFor(x => x.DateOfPublication, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите дату публикации" } })
                        @Html.ValidationMessageFor(x => x.DateOfPublication)
                    </div>
                }
            </div>
            <br />
            @if (!isNew && !string.IsNullOrEmpty(Model.TitleUrl) && User.IsInRole("architect"))
            {
                <div class="row">
                    <div class="col-md-12">
                        @Html.LabelFor(x => x.TitleUrl, new { @class = "control-label" })
                        <span class="text-info"> (применяется для уникальной идентификации материала)</span>
                        @Html.EditorFor(x => x.TitleUrl, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x.TitleUrl)
                    </div>
                </div>
                <br />
            }
            else
            {
                @Html.HiddenFor(x=>x.TitleUrl)
            }
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(x => x.GameId, new { @class = "control-label" })
                    @Html.EditorFor(x => x.GameId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.GameId)
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(x => x.CategoryId, new { @class = "control-label" })
                    @Html.EditorFor(x => x.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.CategoryId)
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(x => x.FrontPictureId, new { @class = "control-label" })
                    @if (!isNew && Model.FrontPictureId.HasValue)
                    {
                        @:&nbsp;
                        <a href="@Url.Action(MVC.Pictures.Picture((Guid)Model.FrontPictureId))">Показать</a>
                    }
                    @Html.EditorFor(x => x.FrontPictureId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.FrontPictureId)
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(x => x.ShowFrontPictureOnDetailPage, new { @class = "control-label" })
                    @Html.EditorFor(x => x.ShowFrontPictureOnDetailPage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.ShowFrontPictureOnDetailPage)
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(x => x.Foreword, new { @class = "control-label" })
                    @Html.EditorFor(x => x.Foreword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Foreword)
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    <button data-toggle="modal" title="Посмотреть результат" data-target="#matModal" type="button" class="btn btn-default"><i class="fa fa-eye"></i></button>&nbsp;
                    @Html.LabelFor(x => x.Html, new { @class = "control-label" }) <br /><br />
                    @Html.EditorFor(x => x.Html, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Html)
                    @Html.Partial(MVC.Shared.Views._MaterialModal, Model)
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">@(Model.Id == 0 ? "Добавить" : "Сохранить")</button>
                        @Html.RouteLink("Назад", new { action = "Index" }, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        </form>
    </div>
    @if (User.IsInRole("seo") && !isNew && !hasError)
    {
        <div role="tabpanel" class="tab-pane @(uriFragmet == "tags-cloud" ? "active" : null)" id="tags-cloud">
            <div class="row">
                <div class="col-md-12">
                    <div id="grid-mat-tags">
                        @Html.Action(MVC.MaterialTags.Index(mid: Model.Id, mct: Model.ModelCoreType))
                    </div>
                </div>
            </div>
        </div>

        <div role="tabpanel" class="tab-pane @(uriFragmet=="seo"? "active":null)" id="seo">
            <div class="row">
                <div class="col-md-12">
                    <div id="grid-mat-tags">
                        @Html.Action(MVC.SeoInfo.EditForMaterial(mid: Model.Id, mct: Model.ModelCoreType, id: Model.SeoInfoId))
                    </div>
                </div>
            </div>
        </div>
    }
    @if (User.IsInRole("video-redactor") && !isNew && !hasError)
    {
        <div role="tabpanel" id="videos" class="tab-pane @(uriFragmet=="videos"? "active":null)">
            @Html.Partial(MVC.Shared.Views._NotMaterialVideos, Model)
            <h3>Видео контент материала</h3>
            <p class="text-info">Для добавления доступны только видеоролики, зарегистрированные на сайте. Для регистрации видеоролика его необходимо занести в базу данных <a href="@Url.Action(MVC.Videos.Index())" style="text-decoration:underline;" target="_blank">здесь</a></p>
            <div id="grid-videos">
                @Html.Action(MVC.VideoLinks.Index(mid: Model.Id, mct: Model.ModelCoreType))
            </div>
        </div>
    }
</div>

@section scripts{
    <script type="text/javascript" src="~/bower_components/ckeditor/ckeditor.js"></script>
    <script type="text/javascript" src="~/Content/dist/js/bootstrap-datepicker.min.js"></script>
    <script type="text/javascript" src="~/Content/dist/js/lightbox.min.js"></script>
    <script type="text/javascript">
        if (CKEDITOR.instances['Html']) {
            CKEDITOR.remove(CKEDITOR.instances['Html']);
        }
        CKEDITOR.replace('Html', { height: 400 });

        $(function () {
            $('#DateOfPublication').datepicker({
                format: 'dd.mm.yyyy',
            });

            $('#matModal').on('show.bs.modal', function (e) {
                $(this).find('.modal-title').html($('#Title').val());
                $(this).find('.modal-body > .container-fluid').html($('#Html').val());
            })

            $('#not-mat-videos').on('show.bs.modal', function (event) {
                var modal = $(this);
                $.ajax({
                    method: 'get',
                    url: '/videolinks/indexnotlinked?mid=' + @Model.Id + '&mct=' + '@Model.ModelCoreType' + '&fm=false',
                    success: function (data) {
                        modal.find('.modal-body').html(data);
                    }
                });
            })
        });

    </script>
}
