@model VMEditAphorism
@{
    var isNew = Model.Id == 0;
    ViewBag.Title = isNew ? "Добавить афоризм" : "Редактировать афоризм \"" + Model.Title + "\"";
    ViewBag.AuthorAphorism = isNew || !Model.AuthorId.HasValue ? null : Model.Author.Name;
}

<h2>@ViewBag.Title</h2>
@if (!isNew)
{
    <form method="post" action="@Url.Action(MVC.Aphorisms.Delete(cat: Model.CategoryId, id: Model.Id, mct: SX.WebCore.Enums.ModelCoreType.Aphorism))">
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-danger pull-right" onclick="if (!confirm('Удалить запись?')) { return false;}">Удалить афоризм</button>
    </form>
}
<br />
<form method="post" action="@Url.Action(MVC.Aphorisms.Edit())">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.CategoryId)

    <div class="form-group">
        @Html.LabelFor(x => x.Title, new { @class = "control-label" })
        @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите заголовок" } })
        @Html.ValidationMessageFor(x => x.Title)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.AuthorId, new { @class = "control-label" })
        @Html.EditorFor(x => x.AuthorId, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.AuthorId)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Html, new { @class = "control-label" })
        @Html.EditorFor(x => x.Html, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите содержание" } })
        @Html.ValidationMessageFor(x => x.Html)
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">@(isNew ? "Добавить" : "Сохранить")</button>
        @Html.ActionLink("Назад", MVC.Aphorisms.Index(curCat: Model.CategoryId), new { @class = "btn btn-default" })
    </div>
</form>