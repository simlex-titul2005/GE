@model VMGameMenu
@{
    var length = Math.Round((decimal)100 / (Model.Length + 1), 4).ToString().Replace(',', '.');
    var controllerName = (string)ViewBag.ControllerName;
    var actionName = (string)ViewBag.ActionName;
    var gameName = !string.IsNullOrEmpty(ViewBag.GameName) ? (string)ViewBag.GameName : null;
}
<div id="game-list">
    <div class="game-menu">
        <div class="container">
            <ul>
                <li style="width:@(length + "%")" @(gameName == null ? "class=active" : null)>
                    <a href="@(controllerName != "home" ? Url.Action("list", new { controller = controllerName, gameTitle = (string)null }) : "/")" title="Показать все" data-toggle="tooltip" data-placement="bottom" class="red-tooltip">
                        <img alt="Показать все" src="@(Model.EmptyGame.IconPath)" />
                    </a>
                </li>

                @for (int i = 0; i < Model.Length; i++)
                {
                    var item = Model.Games[i];
                    var url = string.Empty;
                    switch(controllerName)
                    {
                        case "home":
                            url = Url.Action("details", new { controller = "games", titleUrl = item.TitleUrl });
                            break;
                        case "aphorisms":
                            url = Url.Action("details", new { controller = "games", titleUrl = item.TitleUrl });
                            break;
                        case "games":
                            url = Url.Action("details", new { controller = "games", titleUrl = item.TitleUrl });
                            break;
                        case "articles":
                            url=actionName == "list" || actionName == "index" ? Url.Action(actionName, new { controller = controllerName, gameTitle = item.TitleUrl }) : Url.Action("list", new { controller = controllerName, gameTitle = item.TitleUrl });
                            break;
                        case "news":
                            url = actionName == "list" || actionName == "index" ? Url.Action(actionName, new { controller = controllerName, gameTitle = item.TitleUrl }) : Url.Action("list", new { controller = controllerName, gameTitle = item.TitleUrl });
                            break;
                        default:
                            url = "#";
                            break;

                    }

                    <li style="width:@(length + "%")" @(item.TitleUrl.ToLower() == gameName ? "class=active" : null)>
                        <a href="@url" title="@item.Title" data-toggle="tooltip" data-placement="bottom" class="red-tooltip ">
                            <img alt="@item.Title" src="@Url.Action(MVC.Pictures.Picture(item.FrontPictureId, height: 80))" />
                            <span class="visible-xs">@item.Title</span>
                        </a>
                    </li>
                }
            </ul>
        </div>
    </div>
    <div class="game-images">
        <div class="container">
            @Html.DisplayFor(x => Model[gameName], new { LoadImg = true, Materials = Model.Materials })
        </div>
    </div>
</div>
