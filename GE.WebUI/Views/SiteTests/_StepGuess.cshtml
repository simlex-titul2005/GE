@model SxVMSiteTestAnswer
@{
    Layout = null;
    var oldSteps = (SxVMSiteTestStepGuess[])ViewBag.OldSteps;
    SxVMSiteTestStepGuess step;
}

@if (ViewBag.SubjectsCount == null || ViewBag.SubjectsCount > 1)
{
    using (Ajax.BeginForm("StepGuess", new { controller="SiteTests" }, new AjaxOptions { HttpMethod = "post", UpdateTargetId = "st-page" }))
    {
        <br />
        <blockquote>
            @Html.Raw(Model.Question.Test.Description)
        </blockquote>

        @Html.AntiForgeryToken()

        <div class="q">
            @for (int i = 0; i < oldSteps.Length; i++)
            {
                step = oldSteps[i];
                <input type="hidden" name="[@i].QuestionId" value="@step.QuestionId" />
                <input type="hidden" name="[@i].IsCorrect" data-q-id="@step.QuestionId" value="@step.IsCorrect.ToString().ToLower()" />
                <input type="hidden" name="[@i].Order" value="@i" />
            }
        </div>

        @Html.SxIndicatorGroup(
            new SxVMSiteTestAnswer[] { Model },
            new SxExtantions.SxIndicatorGroupSettings<SxVMSiteTestAnswer>
            {
                FuncGetLabel = x => x.Question.Text,
                FuncGetId = x => x.Question.Id.ToString()
            })
    }
}
else
{
    <br />
    <h2>@Model.Subject.Title</h2>
    <br />
    <div>
        @if (Model.Subject.PictureId.HasValue)
        {
            <figure class="step__subject-figure" style="background-image:url(@Url.Action("Picture","Pictures", new { id=Model.Subject.PictureId})"></figure>
        }
        @Html.Raw(Model.Subject.Description)
    </div>
    <br />
    <div class="text-center">
        <a class="btn btn-default btn-transparent white" href="@Url.Action("Details", "SiteTests", new { titleUrl=Model.Question.Test.TitleUrl})">Пройти заново</a>
    </div>
    <br />
}