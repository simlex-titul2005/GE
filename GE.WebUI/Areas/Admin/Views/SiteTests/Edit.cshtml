@model VMSiteTest
@{
    var isNew = Model.Id == 0;
    ViewBag.Title = Model.Id == 0 ? "Добавить тест сайта" : "Редактировать тест \"" + Model.Title + "\"";
}

@section styles{
    <link href="@Url.Action("Css", "StaticContent", new { area="", name="lightbox"})" rel="stylesheet" />
    <link href="~/content/dist/css/test-matrix.min.css" rel="stylesheet" />
    <style>
        .settings-alert-info{
            min-height:92px;
        }
    </style>
}

<h2>@ViewBag.Title</h2>

<div class="text-right">
    <div class="form-group">
        @if (!isNew)
        {
            <form method="post" action="@Url.Action("Delete")">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.Id)
                <button type="submit" class="btn btn-danger" onclick="if(!confirm('Удалить запись?')){return false;}">Удалить тест</button>
            </form>
        }
    </div>
</div>

<ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#general" aria-controls="general" role="tab" data-toggle="tab"><i class="fa fa-cog" aria-hidden="true"></i> Основные параметры</a></li>
    @if (!isNew)
    {
        <li role="presentation"><a href="#settings" aria-controls="settings" role="tab" data-toggle="tab"><i class="fa fa-wrench fa-fw"  aria-hidden="true"></i> Настройки теста</a></li>
        <li role="presentation"><a href="#subjects" aria-controls="subjects" role="tab" data-toggle="tab"><i class="fa fa-object-group" aria-hidden="true"></i> Объекты теста</a></li>
        <li role="presentation"><a href="#questions" aria-controls="questions" role="tab" data-toggle="tab"><i class="fa fa-question" aria-hidden="true"></i> Вопросы теста</a></li>
        <li role="presentation"><a href="#matrix" aria-controls="matrix" role="tab" data-toggle="tab"><i class="fa fa-clone" aria-hidden="true"></i> Матрица ответов</a></li>
    }
    else
    {
        <li role="presentation"><a href="#load" aria-controls="load" role="tab" data-toggle="tab">Загрузить из файла</a></li>
    }
</ul>

<div class="tab-content">
    <br />
    <div role="tabpanel" class="tab-pane active" id="general">
        <form method="post" action="edit">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.Id)

            <div class="row">
                <div class="col-md-@(User.IsInRole("architect")?8:10)">
                    <div class="form-group">
                        @Html.LabelFor(x => x.Title, new { @class = "control-label" })
                        @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x.Title)
                    </div>
                </div>
                @if (User.IsInRole("architect"))
                {
                    <div class="col-md-2">
                        <div class="form-group">
                            @Html.LabelFor(x => x.Type, new { @class = "control-label" })
                            @Html.EnumDropDownListFor(x => x.Type, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.Type)
                        </div>
                    </div>
                }
                else
                {
                    @Html.HiddenFor(x => x.Type)
                }
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(x => x.Show, new { @class = "control-label" })
                        @Html.EditorFor(x => x.Show, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(x => x.Show)
                    </div>
                </div>
            </div>

            @if (!isNew && User.IsInRole("architect"))
            {
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(x => x.TitleUrl, new { @class = "control-label" })
                            <span class="text-info"> (применяется для уникальной идентификации материала)</span>
                            @Html.EditorFor(x => x.TitleUrl, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(x => x.TitleUrl)
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(x => x.ViewOnMainPage, new { @class = "control-label" })
                            @Html.EditorFor(x => x.ViewOnMainPage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(x => x.ViewOnMainPage)
                        </div>
                    </div>
                </div>
            }
            else
            {
                @Html.HiddenFor(x => x.TitleUrl)
                <div class="form-group">
                    @Html.LabelFor(x => x.ViewOnMainPage, new { @class = "control-label" })
                    @Html.EditorFor(x => x.ViewOnMainPage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.ViewOnMainPage)
                </div>
            }

            @if (Model.Type == SiteTest.SiteTestType.NormalImage)
            {
                <div class="form-group">
                    @Html.LabelFor(x => x.ShowSubjectDesc, new { @class = "control-label" })
                    @Html.EditorFor(x => x.ShowSubjectDesc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.ShowSubjectDesc)
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(x => x.Description, new { @class = "control-label" })
                @Html.EditorFor(x => x.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Description)
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Rules, new { @class = "control-label" })
                @Html.EditorFor(x => x.Rules, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Rules)
            </div>

            <div class="modal fade" id="matrixModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="myModalLabel"><b>@Model.Title</b>. Матрица ответов теста</h4>
                        </div>
                        <div class="modal-body" style="overflow:hidden; overflow-y:scroll; overflow-x:scroll; max-height:800px;">

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">@(Model.Id == 0 ? "Добавить" : "Сохранить")</button>
                <a href="@Url.Action("Index")" class="btn btn-default">Назад</a>
            </div>
        </form>
    </div>
    @if (!isNew)
    {
        <div role="tabpanel" class="tab-pane" id="settings">
            <div id="site-test-settings">

            </div>
        </div>
        <div role="tabpanel" class="tab-pane" id="subjects">
            <div id="grid-test-subjects">

            </div>
        </div>
        <div role="tabpanel" class="tab-pane" id="questions">
            <div id="grid-test-questions">

            </div>
        </div>
        <div role="tabpanel" class="tab-pane" id="matrix">
            <div id="matrix">

            </div>
        </div>
    }
    else
    {
        <div role="tabpanel" class="tab-pane" id="load">
            <br />
            <div class="input-group">
                <input type="text" class="form-control" name="test-file-input" placeholder="Выберите файл">
                <form method="post" action="@Url.Action("LoadFromFile", "SiteTests")" autocomplete="off" enctype="multipart/form-data">
                    <input type="file" class="hidden" name="file" />
                    @Html.AntiForgeryToken()
                </form>
                <span class="input-group-btn">
                    <button class="btn btn-default" type="button" onclick="$('input[name=test-file-input]').trigger('focus');">Выбрать</button>
                </span>
            </div>
        </div>
    }
</div>

<div class="modal fade" id="test-modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">

            </div>
        </div>
    </div>
</div>



@section scripts{
    <script src="@Url.Action("Js", "StaticContent", new { area="", name="jquery.validate"})"></script>
    <script src="@Url.Action("Js", "StaticContent", new { area="", name="jquery.validate.unobtrusive"})"></script>
    <script src="@Url.Action("Js", "StaticContent", new { area="", name="lightbox"})"></script>
    <script src="~/bower_components/ckeditor/ckeditor.js"></script>

    <script>
        $(function () {
            if (CKEDITOR.instances['Description'] && CKEDITOR.instances['Rules']) {
                CKEDITOR.remove(CKEDITOR.instances['Description']);
                CKEDITOR.remove(CKEDITOR.instances['Rules']);
            }
            CKEDITOR.replace('Description', { height: 300 });
            CKEDITOR.replace('Rules', { height: 300 });

            var gridTestQuestions = new SxGridView('#grid-test-questions');
            var gridTestSubjects = new SxGridView('#grid-test-subjects');

            //subjects
            $('a[href="#subjects"]').on('shown.bs.tab', function (e) {
                $a=$(this);
                $.ajax({
                    method: 'post',
                    url: '@Url.Action("Index", "SiteTestSubjects", new { testId=Model.Id})',
                    beforeSend:function(){
                        $('<i class="fa fa-spinner fa-spin"></i>').prependTo($a);
                    },
                    success:function(result){
                        $('#grid-test-subjects').html(result);
                    },
                    complete:function(){
                        $a.find('.fa-spinner').remove();
                    }
                });
            })

            $('#grid-test-subjects').on('click', '.sx-gv__create-btn', function () {
                $modal=$('#test-modal');
                $header=$modal.find('.modal-header h4');
                $body=$modal.find('.modal-body');
                $header.html('Добавить объект теста "@Model.Title"');
                var href=$(this).attr('href');
                $.ajax({
                    method:'get',
                    url:href,
                    success:function(result)
                    {
                        $body.html(result);
                    },
                    complete:function(){
                        if (CKEDITOR.instances['subject.Description']) {
                            CKEDITOR.remove(CKEDITOR.instances['subject.Description']);
                        }
                        CKEDITOR.replace('subject.Description', { height: 300 });
                        var gl = new SxGridLookup($body.find('#PictureId'));
                        $modal.modal('show');
                        $modal.tooltip();
                    }
                });

                return false;
            });

            $('#grid-test-subjects').on('click', '.sx-gv__edit-btn', function(){
                $modal=$('#test-modal');
                $header=$modal.find('.modal-header h4');
                $body=$modal.find('.modal-body');
                $header.html('Редактировать объект теста "@Model.Title"');
                var href=$(this).attr('href');
                $.ajax({
                    method:'get',
                    url: href,
                    success:function(result)
                    {
                        $body.html(result);
                    },
                    complete:function(){
                        if (CKEDITOR.instances['subject.Description']) {
                            CKEDITOR.remove(CKEDITOR.instances['subject.Description']);
                        }
                        CKEDITOR.replace('subject.Description', { height: 300 });
                        var gl = new SxGridLookup($body.find('#PictureId'));
                        $modal.modal('show');
                    }
                });

                return false;
            });

            //questions
            $('a[href="#questions"]').on('shown.bs.tab', function (e) {
                $a=$(this);
                $.ajax({
                    method: 'post',
                    url: '@Url.Action("Index", "SiteTestQuestions", new { testId = Model.Id })',
                    beforeSend:function(){
                        $('<i class="fa fa-spinner fa-spin"></i>').prependTo($a);
                    },
                    success:function(result){
                        $('#grid-test-questions').html(result);
                    },
                    complete:function(){
                        $a.find('.fa-spinner').remove();
                    }
                });
            })

            $('#grid-test-questions').on('click', '.sx-gv__create-btn', function(){
                $modal=$('#test-modal');
                $header=$modal.find('.modal-header h4');
                $body=$modal.find('.modal-body');
                $header.html('Добавить вопрос теста "@Model.Title"');
                var href=$(this).attr('href');
                $.ajax({
                    method:'get',
                    url:href,
                    success:function(result)
                    {
                        $body.html(result);
                    },
                    complete:function(){
                        $modal.modal('show');
                    }
                });

                return false;
            });
            
            $('#grid-test-questions').on('click', '.sx-gv__edit-btn', function(){
                $modal=$('#test-modal');
                $header=$modal.find('.modal-header h4');
                $body=$modal.find('.modal-body');
                $header.html('Редактировать вопрос теста "@Model.Title"');
                var href=$(this).attr('href');
                $.ajax({
                    method:'get',
                    url: href,
                    success:function(result)
                    {
                        $body.html(result);
                    },
                    complete:function(){
                        $modal.modal('show');
                    }
                });

                return false;
            });

            //load from file
            $('input[name="test-file-input"]').focus(function(){
                $input=$(this);
                $file=$('input[type="file"]');
                $file.trigger('click');
            });

            $('input[type="file"]').change(function(){
                var file=this.files[0];
                var name=file.name;
                $('input[name="test-file-input"]').val(name);
                $(this).closest('form').submit();
            });

            //matrix
            $('a[href="#matrix"]').on('shown.bs.tab', function (e) {
                $a=$(this);
                $.ajax({
                    method: 'get',
                    url: '@Url.Action("TestMatrix", "SiteTests", new { testId = Model.Id })',
                    beforeSend:function(){
                        $('<i class="fa fa-spinner fa-spin"></i>').prependTo($a);
                    },
                    success:function(result){
                        $('#matrix').html(result);
                    },
                    complete:function(){
                        $a.find('i').remove();
                        $('#matrix td:not(.matrix__first-column):contains(1)').addClass('success');
                        $('[data-toggle="tooltip"]').tooltip({container:'body'});
                    }
                });
            })

            $('#matrix').on('click', 'td:not(.matrix__first-column)', function(){
                $td=$(this);
                $tr=$td.closest('tr');
                var question=$.trim($tr.find('.matrix__first-column').text());
                var subject = $.trim($td.closest('table').find('th').eq($td.index()).text());
                var value=parseInt($td.html());
                var token = $('input[name="__RequestVerificationToken"]').val();

                $.ajax({
                    method:'post',
                    url: '@Url.Action("revertmatrixvalue", "sitetests")',
                    data:{subjectTitle: subject, questionText: question, value: value, __RequestVerificationToken:token},
                    beforeSend:function(){
                        $td.html('<i class="fa fa-spinner fa-spin"></i>');
                    },
                    success:function(result){
                        $td.html(result);
                        if(value==0)
                            $td.addClass('success');
                        else
                            $td.removeClass('success');
                    }
                });
            });

            $('#matrix').on('click','.sx-pager a', function(){
                var href=$(this).attr('href');
                $spinner=$('.p-spinner');
                $.ajax({
                    method:'get',
                    url:href,
                    beforeSend:function(){
                        $spinner.show();
                    },
                    success:function(result){
                        $('#matrix').html(result);
                    },
                    complete:function(){
                        $spinner.hide();
                        $('#matrix td:not(.matrix__first-column):contains(1)').addClass('success');
                        $('[data-toggle="tooltip"]').tooltip({container:'body'});
                    }
                });

                return false;
            });

            $('#matrix').on('click', '.matrix__first-column',function(){
                var css='warning';
                $tr=$(this).closest('tr');
                $('.matrix__first-column').closest('tr').removeClass(css);
                $tr.addClass(css);
            });

            //settings
            $('a[href="#settings"]').on('shown.bs.tab', function (e) {
                $a = $(this);
                $.ajax({
                    method: 'get',
                    url: '@Url.Action("Edit", "SiteTestSettings", new { testId = Model.Id })',
                    beforeSend: function () {
                        $('<i class="fa fa-spinner fa-spin"></i>').prependTo($a);
                    },
                    success: function (result) {
                        $('#site-test-settings').html(result);
                    },
                    complete: function () {
                        $a.find('.fa-spinner').remove();
                    }
                });
            })
        });
    </script>
}