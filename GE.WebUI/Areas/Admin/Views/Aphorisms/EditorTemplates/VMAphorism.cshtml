@model VMAphorism
@{
    var isNew = Model.Id == 0;
}

<form method="post" action="@Url.Action("Edit")">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.ViewsCount)
    @Html.HiddenFor(x => x.DateCreate)
    @Html.HiddenFor(x=>x.DateUpdate)
    <input type="hidden" name="CategoryId" value="@ViewBag.CategoryId" />

    @if (User.IsInRole("architect") && !isNew)
    {
    <div class="form-group">
        @Html.LabelFor(x => x.TitleUrl, new { @class = "control-label" })
        @Html.EditorFor(x => x.TitleUrl, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.TitleUrl)
    </div>
    }
    else
    {
        @Html.HiddenFor(x=>x.TitleUrl)
    }

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.Title, new { @class = "control-label" })
                @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите заголовок" } })
                @Html.ValidationMessageFor(x => x.Title)
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.Show, new { @class = "control-label" })
                @Html.EditorFor(x => x.Show, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Show)
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.AuthorId, new { @class = "control-label" })
                @Html.EditorFor(x => x.AuthorId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.AuthorId)
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.SourceUrl, new { @class = "control-label" })
                @Html.EditorFor(x => x.SourceUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.SourceUrl)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Foreword, new { @class = "control-label" }) (не больше 400 символов включая пробелы)
        @Html.EditorFor(x => x.Foreword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите содержание" } })
        @Html.ValidationMessageFor(x => x.Foreword)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Html, new { @class = "control-label" })
        @Html.EditorFor(x => x.Html, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите содержание" } })
        @Html.ValidationMessageFor(x => x.Html)
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">@(isNew ? "Добавить" : "Сохранить")</button>
        @Html.ActionLink("Назад", "index", new { controller = "Aphorisms", curCat = Model.CategoryId }, new { @class = "btn btn-default" })
    </div>
</form>