@model VMGameMenu
@{
    var length = Math.Round((decimal)100 / (Model.Length + 1), 4).ToString().Replace(',', '.');
    var controllerName = (string)ViewBag.ControllerName;
    var actionName = (string)ViewBag.ActionName;
    var gameName = !string.IsNullOrEmpty(ViewBag.GameName) ? (string)ViewBag.GameName : null;
}
<div id="game-list">
    <div class="game-menu">
        <div class="container">
            <ul>
                <li style="width:@(length + "%")" @(gameName == null ? "class=active" : null)>
                    <a href="@(controllerName != "home" ? Url.Action(actionName, new { controller = controllerName, gameTitle = "" }) : "/")" title="Показать все" data-toggle="tooltip" data-placement="bottom" class="red-tooltip">
                        <img alt="Показать все" src="@(Model.EmptyGame.IconPath)" />
                    </a>
                </li>

                @for (int i = 0; i < Model.Length; i++)
                {
                    var item = Model.Games[i];
                    <li style="width:@(length + "%")" @(item.Title.ToLower() == gameName ? "class=active" : null)>
                        <a href="@Url.Action(actionName, new { controller=controllerName, gameTitle = item.Title })" title="@item.Title" data-toggle="tooltip" data-placement="bottom" class="red-tooltip ">
                            <img alt="@item.Title" src="@Url.Action(MVC.Pictures.Picture(item.FrontPictureId, height: 80))" />
                            <span class="visible-xs">@item.Title</span>
                        </a>
                    </li>
                }
            </ul>
        </div>
    </div>
    <div class="game-images">
        <div class="container">
            @Html.DisplayFor(x => Model[gameName], new { LoadImg = true })
        </div>
    </div>
</div>
