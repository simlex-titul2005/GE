@model SxVMSiteTestAnswer
@{
    Layout = null;
    var oldSteps = (SxVMSiteTestStep[])ViewBag.OldSteps;
    var allSubjectsCount = Convert.ToInt32(ViewBag.AllSubjectsCount ?? -1);
    var lettersCount = (int)ViewBag.LettersCount;
    SxVMSiteTestStep step;
}

@lettersCount

@if (allSubjectsCount > oldSteps.Length || allSubjectsCount==-1)
{
    using (Ajax.BeginForm("StepNormal", "SiteTests", new AjaxOptions { HttpMethod = "post", UpdateTargetId = "st-page" }, new { @autocomplete = "off" }))
    {
        <br />
        <blockquote>
            @Html.Raw(Model.Question.Test.Description)
        </blockquote>

        <div class="progress">
            <div class="progress-bar" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%;">
                <span class="sr-only">100% Complete</span>
            </div>
        </div>

        @Html.AntiForgeryToken()

        <div class="s">
            @for (int i = 0; i < oldSteps.Length; i++)
            {
                step = oldSteps[i];
                <input type="hidden" name="[@i].SubjectId" value="@step.SubjectId" />
                if (step.QuestionId != 0)
                {
                    <input type="hidden" name="[@i].QuestionId" value="@step.QuestionId" />
                }
            }
        </div>

        
        <h2 data-subject-id="@Model.Subject.Id"><img style="height:80px; margin-right:30px;" alt="@Model.Subject.Title" src="@(Model.Subject.PictureId.HasValue?Url.Action("Picture","Pictures", new { id=Model.Subject.PictureId}):"/content/dist/i/testsubject.png")" /> @Model.Subject.Title</h2>

        if (Model.Question.Test.Questions.Any())
        {
            SxVMSiteTestQuestion question;
            <ul class="test-normal-q-list">
                @for (int i = 0; i < Model.Question.Test.Questions.Length; i++)
                {
                    question = Model.Question.Test.Questions[i];
                    <li>
                        <input type="radio" id="q-@question.Id" name="question" /> <label for="q-@question.Id">@question.Text</label>
                    </li>
                }
            </ul>
        }
        <div class="text-center">
            <button type="submit" class="btn btn-transparent white test-normal-q-list__dont-btn">Пропустить</button>
        </div>
    }
}
else
{
    <br />
    <blockquote>
        @Html.Raw(Model.Question.Test.Description)
    </blockquote>

    <h2>Тест пройден</h2>
    <br />
    <div class="text-center">
        <a class="btn btn-default btn-transparent white" href="@Url.Action("Details", "SiteTests", new { titleUrl=Model.Question.Test.TitleUrl})">Пройти заново</a>
    </div>
    <br />
}

<script>
    lettersCount=@lettersCount;
</script>