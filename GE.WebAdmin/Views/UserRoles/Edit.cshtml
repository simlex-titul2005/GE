@model SxVMEditAppRole
@{
    var isNew = string.IsNullOrEmpty(Model.Id);
    ViewBag.Title = isNew ? "Добавить роль" : "Редактировать роль \"" + Model.Name + "\"";
}

<h2>@ViewBag.Title</h2>
@if (!isNew)
{
    <div class="form-group">
        <form method="post" action="/userroles/delete">
            @Html.HiddenFor(x => x.Id)
            @Html.AntiForgeryToken()
            <div class="text-right">
                <button type="submit" class="btn btn-danger" onclick="if (!confirm('Удалить запись')) { return false;}">Удалить роль</button>
            </div>
        </form>
    </div>
}

<form method="post" action="/userroles/edit" autocomplete="off">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)

    <div class="form-group">
        @Html.LabelFor(x => x.Name, new { @class = "control-label" })
        @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите наименование роли" } })
        @Html.ValidationMessageFor(x => x.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Description, new { @class = "control-label" })
        @Html.EditorFor(x => x.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите описание роли" } })
        @Html.ValidationMessageFor(x => x.Description)
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">@(isNew ? "Добавить" : "Сохранить")</button>
        @Html.ActionLink("Назад", "index", new { controller = "userroles" }, new { @class = "btn btn-default" })
    </div>
</form>