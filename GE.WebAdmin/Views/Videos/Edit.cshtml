@model SxVMEditVideo
@{
    var isNew = Model.Id == Guid.Empty;
    ViewBag.Title = isNew ? "Добавить видео сайта" : "Редактировать видео сайта \"" + Model.Title + "\"";
}

<h2>@ViewBag.Title</h2>
@if (!isNew)
{
    <form method="post" action="/videos/delete">
        @Html.HiddenFor(x => x.Id)
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-danger pull-right" onclick="if(!confirm('Удалить запись?')){return false;}">Удалить видео</button>
    </form>
}
<p class="text-info">Видео обрабатывается и редактируется на основе существующего видео канала youtube.com</p>
<br />
<form method="post" action="/videos/edit">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)

    <div class="form-group">
        @Html.LabelFor(x => x.Title, new { @class = "control-label" })
        @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите название видео" } })
        @Html.ValidationMessageFor(x => x.Title)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.VideoId, new { @class = "control-label" })
        @Html.EditorFor(x => x.VideoId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите идентификатор видео" } })
        @Html.ValidationMessageFor(x => x.VideoId)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.SourceUrl, new { @class = "control-label" })
        @Html.EditorFor(x => x.SourceUrl, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите источник видео" } })
        <div class="text-info">Задается в случае размещения стороннего видео для соблюдения авторских прав</div>
        @Html.ValidationMessageFor(x => x.SourceUrl)
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">@(isNew ? "Добавить" : "Сохранить")</button>
        @Html.ActionLink("Назад", "index", new { controller="videos"}, new { @class = "btn btn-default" })
    </div>
</form>