@model VMAphorism[]
@{
    var searchAuthor = Request.QueryString["author"];
    var authorName = searchAuthor != null ? searchAuthor == "no" ? "Аноним" : searchAuthor.ToString() : null;
    var pagerInfo = (SxExtantions.SxPagerInfo)ViewBag.PagerInfo;
    var category = ViewBag.CurrentAphorismCategory != null ? ((VMMaterialCategory)ViewBag.CurrentAphorismCategory) : null;
    var categoryId = category != null ? category.Id : null;
    var curName = category != null ? category.Title : null;
    var title = curName == null && authorName == null ? "Афоризмы, короткие высказывания, шутки" : string.Format("{0}. Афоризмы, короткие высказывания, шутки", curName ?? authorName);
    ViewBag.Title = title;

    ViewBag.H1 = ViewBag.H1 ?? title;
    ViewBag.Description = ViewBag.Description ?? title;
    ViewBag.Keywords = ViewBag.Keywords ?? title;
}

@Html.Partial(MVC.Shared.Views._Breadcrumbs, (VMBreadcrumb[])ViewBag.Breadcrumbs)

<div class="ap-list-page">
    <div class="row">
        <div class="col-md-9">
            @Html.Partial(MVC.Aphorisms.Views._List, Model)
            <div class="text-center">
                @Html.SxPager(pagerInfo, pageUrl: (x) => Url.Action("list", new { categoryId = categoryId, page = x, author = ViewBag.AuthorName }), htmlAttributes: new { @class = "pagination" }, isAjax: false)
            </div>
        </div>
        <div class="col-md-3">
            @Html.Action(MVC.Aphorisms.Categories(curCat: curName, onlyNotCurrent: false))
        </div>
    </div>
</div>
