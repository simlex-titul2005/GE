@model VMEditSeoInfo
@{
    var isNew = Model.Id == 0;
    ViewBag.Title = isNew ? "Добавить страницу отслеживания" : "Редактировать страницу отслеживания \"" + Model.RawUrl + "\"";
}
<h2>@ViewBag.Title</h2>
<br />
@if (!isNew)
{
    <form method="post" action="delete">
        @Html.HiddenFor(x => x.Id)
        @Html.AntiForgeryToken()
        <button type="submit" class="btn btn-danger pull-right" onclick="if(!confirm('Удалить запись?')) return false;">Удалить</button>
    </form>
}
<form method="post" action="@Url.Action(MVC.SeoInfo.Edit())">
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.Id)

    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(x => x.RawUrl, new { @class = "control-label" })
            <span class="text-info"> (необходимо использовать внутренний адрес)</span>
            @Html.EditorFor(x => x.RawUrl, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите адрес" } })
            @Html.ValidationMessageFor(x => x.RawUrl)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(x => x.SeoTitle, new { @class = "control-label" })
            <span class="text-info"> (тег Title)</span>
            @Html.EditorFor(x => x.SeoTitle, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите заголовок страницы" } })
            @Html.ValidationMessageFor(x => x.SeoTitle)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(x => x.SeoDescription, new { @class = "control-label" })
            <span class="text-info"> (тег Description)</span>
            @Html.EditorFor(x => x.SeoDescription, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите описание страницы" } })
            @Html.ValidationMessageFor(x => x.SeoDescription)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-9">
            @Html.LabelFor(x => x.H1, new { @class = "control-label" })
            <span class="text-info"> (тег h1)</span>
            @Html.EditorFor(x => x.H1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите тег h1" } })
            @Html.ValidationMessageFor(x => x.H1)
            <div class="text-info">Тег отображается непосредственно перед началом любого полезного контента страницы. В случае, если для материалов предусмотррен тег h1 в теле материала, этот тег заменяется заданным здесь.</div>
        </div>
        <div class="col-md-3">
            @Html.LabelFor(x => x.H1CssClass, new { @class = "control-label" })
            @Html.EditorFor(x => x.H1CssClass, new { htmlAttributes = new { @class = "form-control", @placeholder = "Css стиль тега h1" } })
            @Html.ValidationMessageFor(x => x.H1CssClass)
        </div>
    </div>
    <br />
    <div class="col-md-12">
        <div class="row">
            @if (Model.Id != 0)
            {
                <!--keywords-->
                <div id="menu-@Model.Id">
                    @Html.Partial(MVC.SeoKeywords.Views._SeoKeywords, new VMSeoKeywordList { SeoInfoId = Model.Id, Keywords = Model.Keywords })
                </div>
                <!--keywords-->}
            else
            {
                <p class="text-muted"><i class="fa fa-info"></i> Редактирование ключевых слов доступно только только при наличии отслеживаемой страницы в базе данных.</p>
            }
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <button type="submit" class="btn btn-primary">@(Model.Id == 0 ? "Добавить" : "Сохранить")</button>
                @Html.RouteLink("Назад", new { action = "Index" }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
</form>