@model VMAuthorAphorism
@{
    var isNew = Model.Id == 0;
    ViewBag.Title = isNew ? "Добавить автора афоризмов" : "Редактировать автора афоризмов \"" + Model.Name + "\"";
}

@section styles{
    <link href="@Url.Action("Css", "StaticContent", new { area="", name="lightbox"})" rel="stylesheet" />
}

<h2>@ViewBag.Title</h2>
@if (!isNew)
{
    <div class="form-group">
        <div class="text-right">
            <form method="post" action="@Url.Action("Delete", "AuthorAphorisms")">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.Id)
                <button type="submit" class="btn btn-danger" onclick="if (!confirm('Удалить запись?')) { return false;}">Удалить</button>
            </form>
        </div>
    </div>
}
<form method="post" action="@Url.Action("Edit", "AuthorAphorisms")" autocomplete="off">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)

    @if (User.IsInRole("architect"))
    {
        <div class="form-group">
            @Html.LabelFor(x => x.TitleUrl)
            @Html.EditorFor(x => x.TitleUrl, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите строковый ключ" } })
            @Html.ValidationMessageFor(x => x.TitleUrl)
        </div>
    }
    else
    {
        @Html.HiddenFor(x=>x.TitleUrl)
    }

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.Name)
                @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите имя автора" } })
                @Html.ValidationMessageFor(x => x.Name)
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.PictureId, new { @class = "control-label" })
                @Html.EditorFor(x => x.PictureId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.PictureId)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Foreword) (не более 400 символов включая пробелы)
        @Html.EditorFor(x => x.Foreword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите краткое описание автора" } })
        @Html.ValidationMessageFor(x => x.Foreword)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Description)
        @Html.EditorFor(x => x.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите описание автора" } })
        @Html.ValidationMessageFor(x => x.Description)
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">@(isNew ? "Добавить" : "Сохранить")</button>
        <a href="@Url.Action("index")" class="btn btn-default">Назад</a>
    </div>
</form>

@section scripts{
<script src="@Url.Action("Js", "StaticContent", new { area="", name="[jquery.validate][jquery.validate.unobtrusive][lightbox]"})"></script>
    <script type="text/javascript" src="~/bower_components/ckeditor/ckeditor.js"></script>
    <script>
        if (CKEDITOR.instances['Description']) {
            CKEDITOR.remove(CKEDITOR.instances['Description']);
        }
        CKEDITOR.replace('Description', { height: 400 });

        $(function () {
            var glPictures = new SxGridLookup('#PictureId');
        });
    </script>
}