@model VMEditArticleType
@{
    var isNew = Model.Id == 0;
    ViewBag.Title = isNew ? "Добавить тип статьи" : "Редактировать тип статьи \"" + Model.Name + "\" для игры\"" + Model.Game.Title + "\"";
    ViewBag.GameTitle = isNew ? null : Model.Game.Title;
}

<h2>@ViewBag.Title</h2>

@if (!isNew)
{
    <p class="lead text-info">Для обновления доступно только описание типа статьи.</p>
    <form method="post" action="delete">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.GameId)
        @Html.HiddenFor(x => x.Name)
        <button type="submit" class="btn btn-danger pull-right" onclick="if (!confirm('Удалить запись?')) return false;">Удалить</button>
    </form>
}
<br />
<form method="post" action="@Url.Action(MVC.ArticleTypes.Edit())">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)
    @if (!isNew)
    {
        @Html.HiddenFor(x => x.GameId)
        @Html.HiddenFor(x => x.Name)
    }

    @if (isNew)
    {
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(x => x.Name, new { @class = "control-label" })
                <span class="text-info"> (не должно содержать кириллицы и любых знаков, кроме тире)</span>
                @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите название типа статьи" } })
                @Html.ValidationMessageFor(x => x.Name)
            </div>
        </div>
        <br />

        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(x => x.GameId, new { @class = "control-label" })
                @Html.EditorFor(x => x.GameId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.GameId)
            </div>
        </div>
        <br />
    }
    <div class="row">
        <div class="col-md-12">
            @Html.LabelFor(x => x.Description, new { @class = "control-label" })
            @Html.EditorFor(x => x.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Description)
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <button type="submit" class="btn btn-primary">@(isNew ? "Добавить" : "Сохранить")</button>
            @Html.RouteLink("Назад", new { controller = "ArticleTypes", action = "Index" }, new { @class = "btn btn-default" })
        </div>
    </div>
</form>