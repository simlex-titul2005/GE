@model VMSiteTestAnswer
@{
    ViewBag.Title = Model.Question != null && Model.Question.Test != null ? Model.Question.Test.Title : "Страница прохождения теста";
    ViewBag.H1 = ViewBag.H1 ?? ViewBag.Title;
    ViewBag.Description = ViewBag.Description ?? Model.Question != null && Model.Question.Test != null ? Model.Question.Test.Description : "Страница прохождения теста";
    ViewBag.Keywords = ViewBag.Keywords ?? "Игровые тесты, тесты для игр";
    var testType = Model.Question.Test.Type;
}

@Html.Partial("_Breadcrumbs", (SxVMBreadcrumb[])ViewBag.Breadcrumbs)

@if (Model.Question != null && Model.Question.Test != null)
{
    <div id="st-page">
        @if (Equals(testType, SiteTest.SiteTestType.Guess))
        {
            @Html.Partial("_StepGuess", Model)
        }
        else if (Equals(testType, SiteTest.SiteTestType.Normal) || Equals(testType, SiteTest.SiteTestType.NormalImage))
        {
            <script>
                var continueStep = true;
            </script>
            @Html.Partial("_StepNormal", Model)
        }
    </div>
    <div class="text-center" style="color:#fff;">
        <p>Рассказать другу о тесте:</p>
        @Html.SxShareButtons()
    </div>
    <br />

    @section scripts{
        <script src="@Url.Action("Js", "StaticContent", new { name="jquery.unobtrusive-ajax"})"></script>
        <script src="~/Scripts/sxshare.js"></script>
        <script>
            var interval;
            var lettersInSecond =@(Model.Question?.Test?.Settings?.LettersInSecond ?? 20);//1200 знаков в минуту
            var secondCounter = 0;
            $(function () {
                //guess
                $('#st-page').on('click', '.sx-indicator > span', function () {
                    $span = $(this);
                    $span.closest('.sx-indicator').prepend('<i class="fa fa-spinner fa-spin"></i>');
                    var id = $span.closest('li').find('.sx-indicator-txt').attr('data-id');
                    var isCorrect = $span.data('dir') == true;

                    $form = $span.closest('form');
                    $input = $form.find('input[data-q-id="' + id + '"]')
                    $input.val(isCorrect);

                    $form.submit();
                });

                //normal
                $('#st-page').on('change', '.test-normal-q-list [type="radio"]', function () {
                    $radio = $(this);
                    var questionId = $radio.attr('id').replace('q-', '');
                    $h4 = $('#st-page [data-subject-id]');
                    $h4.prepend('<i class="fa fa-spinner fa-spin"></i>');
                    var subjectId = $h4.attr('data-subject-id');
                    $subject = $('#st-page .s [value="' + subjectId + '"]');
                    var subjectIndex = $subject.attr('name').replace('.SubjectId', '');

                    $('<input type="hidden" name="' + subjectIndex + '.QuestionId" value="' + questionId + '" />').insertAfter($subject);

                    $form = $radio.closest('form');
                    $form.submit();
                });

                $('#st-page').on('click', '.test-normal-q-list__dont-btn', function () {
                    $h4 = $('#st-page [data-subject-id]');
                    $h4.prepend('<i class="fa fa-spinner fa-spin"></i>');
                });

                setStepInterval();
            });

            function setStepInterval() {
                clearStepInterval();
                if (!continueStep) {
                    $('.s-s').last().remove();
                    return;
                }

                $subject = $('.s-s').last();
                $lettersCountInput = $subject.children('[name$="LettersCount"]');
                $goodReadInput = $subject.children('[name$="BallsGoodRead"]');
                $badReadInput = $subject.children('[name$="BallsBadRead"]');

                var secondsCount = parseInt(parseInt($lettersCountInput.val()) / lettersInSecond) * @(Model.Question?.Test?.Settings?.BalsForOneSecond ?? 3);

                //Время на ответ по-умолчанию
                var dqs=@(Model.Question?.Test?.Settings?.DefQuestionSeconds ?? 15);

                $goodReadInput.val(secondsCount < dqs ? dqs : secondsCount);
                interval = setInterval(function () {
                    secondCounter++;

                    //Кол-во баллов, онимаемых каждую секунду после завершения времени на ответ
                    var oetbc=@(Model.Question?.Test?.Settings?.OnEndTimeBalsCount ?? 3);

                    var ballsGoodRead = $goodReadInput.val();
                    if (ballsGoodRead != 0)
                        $goodReadInput.val(ballsGoodRead - oetbc);
                    else
                        $badReadInput.val($badReadInput.val() - oetbc);
                }, 1000);
            }

            function clearStepInterval() {
                if (interval) {
                    clearInterval(interval);
                    secondCounter = 0;
                }
            }
        </script>
    }
}

@Html.Action("Popular", "News", new { mct = (int?)null, mid = (int?)null, amount = 4 })

