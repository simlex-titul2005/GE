@model VMAphorism[]
@{
    Layout = null;
    var author = (VMAuthorAphorism)ViewData["Author"];
    var category = (SxVMMaterialCategory)ViewData["Category"];
    string header = null;
    if (category != null)
    {
        header = string.Format("Другие высказывания в категории {0}", category.Title);
    }
    else if (category == null && author != null)
    {
        header = string.Format("{0}. Другие высказывания", author.Name);
    }
}
<div class="ap-list">
    @if (author != null && author.PictureId.HasValue)
    {
        <div class="aph-autor-info">
            <figure class="aph-autor-info__img img-circle" style="background-image:url(@Url.Action("Picture","Pictures", new { id=author.PictureId})"></figure>
            <div class="aph-autor-info__fwd">
                @author.Foreword<br />
            </div>
            @if (!string.IsNullOrWhiteSpace(author.Foreword))
            {
            <br />
            <a href="@Url.Action("Details", "AuthorAphorisms", new { titleUrl = author.TitleUrl })" class="btn btn-sm btn-default test-item__btn">Подробнее об авторе <i class="fa fa-angle-double-right"></i></a>
            }
        </div>
    }

    @if (header != null)
    {
        <h2 class="header">@header</h2>
    }

    <ul>
        @for (int i = 0; i < Model.Length; i++)
            {
                var a = Model[i];
            <li onclick="changeLocation(this)">
                @Html.DisplayFor(x=>a)
            </li>
        }
    </ul>
</div>