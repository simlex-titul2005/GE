@using SX.WebCore;
@model SxExtantions.SxPagedCollection<VMHumor>
@{
    var siteName = SX.WebCore.MvcApplication.SxMvcApplication.SiteSettingsProvider["siteName"]?.Value;
    ViewBag.Title = ViewBag.Title ?? "Коллекция юмора от " + siteName;
    ViewBag.H1 = ViewBag.H1 ?? ViewBag.Title;
    ViewBag.Description = ViewBag.Description ?? "Качественная коллекция юмора от " + siteName;
    ViewBag.Keywords = ViewBag.Description ?? "Анекдоты, смешные истории, розыгрыши, шутки, " + siteName;
    VMMaterial item;
    var length = 1000;
    var date = DateTime.Now;
}

@section styles{
    <link href="~/content/dist/css/humor.min.css" rel="stylesheet" />
}

@Html.Partial("_Breadcrumbs", model: (SxVMBreadcrumb[])ViewBag.Breadcrumbs)

<div id="humor-page">
    @if (Model.Collection.Any())
    {
        <ul class="list-unstyled">
            @for (int i = 0; i < Model.Collection.Length; i++)
            {
                item = Model.Collection[i];
                <li>
                    <div class="humor-list">
                        <h2 class="humor-list__header">@item.Title</h2>
                        <div class="humor-list__info">
                            <ul class="list-unstyled list-inline">
                                <li>
                                    <i class="fa fa-clock-o" aria-hidden="true"></i>: &nbsp; @((date-item.DateOfPublication).Days) дней назад
                                </li>
                                <li>
                                    <i class="fa fa-eye" aria-hidden="true"></i>: &nbsp; @item.ViewsCount
                                </li>
                                <li>
                                    <i class="fa fa-comments-o" aria-hidden="true"></i>: &nbsp; @item.CommentsCount
                                </li>
                            </ul>
                        </div>
                        @if (item.User != null)
                        {
                            <div class="humor-list__author text-muted">
                                @if (item.User.Id != null)
                                {
                                    <span>Опубликовал: @(item.User.NikName ?? item.User.Email)</span>
                                }
                                else
                                {
                                    <span>Прислал: @(item.User.NikName)</span>
                                }
                            </div>
                        }
                        <div>
                            @if (item.Videos.Length > 0)
                            {
                                <div style="position:relative; height:340px; width:100%; max-width:100%;">
                                    @Html.SxVideo(item.Videos.First(), SX.WebCore.Providers.SxVideoProvider.VideoQuality.Medium)
                                </div>
                            }
                            else
                            {
                                @Html.Raw(item.Html.Length <= length ? item.Html : item.Html.Substring(0, length) + "...")
                            }
                        </div>
                        @if (!string.IsNullOrEmpty(item.SourceUrl))
                        {
                            <div class="humor-list__source">
                                Источник: <a href="@item.SourceUrl" rel="nofollow" target="_blank">@item.SourceUrl</a>
                            </div>
                        }
                        

                        @*<br />
                        <div class="text-center">
                            @Html.SxShareButtons(global_asax.ShareButtons, new Dictionary<string, SxExtantions.SxShareButtonsSettings> {
                                {"vk", new SxExtantions.SxShareButtonsSettings { Url= Url.ContentAbsUrl(Url.Action("Details", "Humor")), Title=item.Title, Text=item.Foreword } },
                                {"fb", new SxExtantions.SxShareButtonsSettings { Url=Url.ContentAbsUrl(Url.Action("Details", "Humor")), Title=item.Title, Text=item.Foreword } },
                                {"ok", new SxExtantions.SxShareButtonsSettings { Url=Url.ContentAbsUrl(Url.Action("Details", "Humor")), Title=item.Title, Text=item.Foreword } },
                            }, new SxExtantions.SxLikeButtonsSettings
                            {
                                LikeUpCount = () => item.LikeUpCount,
                                UrlUp = () => Url.Action("AddLike", "Humor", new { mid = item.Id, ld = true }),
                                LikeDownCount = () => item.LikeDownCount,
                                UrlDown = () => Url.Action("AddLike", "Humor", new { mid = item.Id, ld = false })
                            })
                        </div>*@
                        
                        <div class="text-center">
                                <br />
                                <a href="@Url.Action("Details", "Humor", new { year=item.DateCreate.Year, month=item.DateCreate.Month.ToString("00"), day=item.DateCreate.Day.ToString("00"), titleUrl=item.TitleUrl})" class="btn btn-warning">Поделиться</a>
                            </div>
                    </div>
                </li>
                if (i!=0 && i % 5 == 0)
                {
                    var banner = ViewBag.PageBanners != null ? ((SxVMBanner[])ViewBag.PageBanners).SingleOrDefault(x => x.Place == SxBanner.BannerPlace.Intermediate) : null;
                    if (!(Equals(banner.Type, SxBanner.BannerType.Google) && Request.IsLocal) || Equals(banner.Type, SxBanner.BannerType.Html))
                    {
                        @Html.SxBanner(banner, (b) => Url.Action("Picture", "Pictures", new { id = b.PictureId }), b => { return Url.Action("Click", "Banners", new { bannerId = b.Id }); })
                    }
                    @Html.Raw("<br/>")
                }
            }
        </ul>
        <div class="text-center">
            @Html.SxPager(Model.PagerInfo, pageUrl: (x) => Url.Action("List", new { page = x }), isAjax: false, htmlAttributes: new { @class = "pagination" })
        </div>
        <br />
        <div class="text-center">
            <a href="@Url.Action("Add","Humor")" class="btn btn-transparent white">Добавить юмор</a>
        </div>
    }
</div>


@section scripts{
    <script src="~/content/dist/js/goodshare.min.js"></script>
    <script type="text/javascript">
        loadScriptOnce('https://www.youtube.com/iframe_api');
    </script>
}