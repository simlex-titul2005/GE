@model VMEditSiteTestQuestion
@{
    var isNew = Model.Id == 0;
    ViewBag.Title = Model.Id == 0 ? "Добавить вопрос теста сайта" : "Редактировать вопрос теста \"" + Model.Text + "\"";
}

<h2>@ViewBag.Title</h2>

@if (!isNew)
{
    <div class="text-right">
        <div class="form-group">
            <form method="post" action="delete">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.Id)
                <button type="submit" class="btn btn-danger" onclick="if(!confirm('Удалить запись?')){return false;}">Удалить вопрос</button>
            </form>
        </div>
    </div>
}

<form method="post" action="edit" autocomplete="off">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(x => x.TestId, new { @class = "control-label" })
                @Html.EditorFor(x => x.TestId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Выберите тест" } })
                @Html.ValidationMessageFor(x => x.TestId)
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(x => x.BlockId, new { @class = "control-label" })
                @Html.EditorFor(x => x.BlockId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Выберите блок" } })
                @Html.ValidationMessageFor(x => x.BlockId)
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(x => x.IsCorrect, new { @class = "control-label" })
                @Html.EditorFor(x => x.IsCorrect, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.IsCorrect)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Text, new { @class = "control-label" })
        @Html.EditorFor(x => x.Text, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.Text)
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">@(Model.Id == 0 ? "Добавить" : "Сохранить")</button>
        @Html.RouteLink("Назад", new { action = "Index" }, new { @class = "btn btn-default" })
    </div>
</form>

@section scripts{
    <script>
        $test = $('.edit-site-test input.form-control');
        $block = $('.edit-site-test-block input.form-control');

        $(function () {
            $('.edit-site-test .dropdown').on('click', 'tr', function () {
                clickTest(this)
            });

            var testId = $test.val();
            if (testId == '')
                disableBlock();
            else
                enableBlock();
        });

        function clickTest(e) {
            $tr = $(e);
            var id = $tr.data('id');
            $('.edit-site-test-block')
                .attr('data-url', '/sitetestblocks/findgridview?testId=' + id)
                .attr('data-is-load', false);
            $block.val('');
            enableBlock();
        }

        function disableBlock() {
            $block.attr('disabled', '');
            $block.next('.input-group-btn').find('button').attr('disabled', '');
        }

        function enableBlock() {
            $block.removeAttr('disabled');
            $block.next('.input-group-btn').find('button').removeAttr('disabled');
        }
    </script>
}