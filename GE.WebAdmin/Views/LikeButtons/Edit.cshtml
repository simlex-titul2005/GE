@model SxVMEditLikeButton
@{
    var isNew = Model.Id == 0;
    ViewBag.Title = isNew ? "Добавить кнопку лайков" : "Редактировать кнопку лайков";
}

<h2>@ViewBag.Title</h2>
@if (!isNew)
{
    <div class="text-right">
        <div class="form-group">
            <form method="post" action="@Url.Action("Delete","LikeButtons")">
                @Html.HiddenFor(x => x.Id)
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-danger" onclick="if (!confirm('Удалить запись?')) { return false;}">Удалить кнопку</button>
            </form>
        </div>
    </div>
}

<form method="post" action="@Url.Action("Edit","LikeButtons")" autocomplete="off">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.Show, new { @class = "control-label" })
                @Html.EditorFor(x => x.Show, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Show)
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.ShowCounter, new { @class = "control-label" })
                @Html.EditorFor(x => x.ShowCounter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.ShowCounter)
            </div>
        </div>
    </div>


    <div class="form-group">
        <button type="submit" class="btn btn-primary">@(isNew ? "Добавить" : "Сохранить")</button>
        <a href="@Url.Action("Index","LikeButtons")" class="btn btn-default">Назад</a>
    </div>
</form>

@section scripts{
    <script src="~/content/dist/js/jquery.validate.min.js"></script>
    <script src="~/content/dist/js/jquery.validate.unobtrusive.min.js"></script>
}